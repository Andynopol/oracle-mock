{"version":3,"sources":["components/Home/Todo.js","components/Home/Tabs.js","components/Home/index.js","components/Login/index.js","components/Register/index.js","components/Add/DatePicker.js","components/Add/StatusSelect.js","components/Add/index.js","components/Nav.js","res/pink-panther.png","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","alignItems","background","height","border","userSelect","cursor","titleWrapper","fontWeight","color","fontSize","paddingRight","title","padding","overflow","whiteSpace","status","borderRadius","display","justifyContent","textTransform","maxWidth","date","Todo","props","id","complete","completed","classes","Grid","container","className","onClick","item","xs","md","justify","backgroundColor","boxShadow","marginBottom","CenteredTabs","value","setValue","Paper","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","theme","main","minHeight","width","paddingTop","todos","overflowY","message","noSelect","box","flexFlow","Todos","userData","setUserData","setPath","useState","setTodos","completedTodos","incompletedTodos","useEffect","console","log","filter","todo","isComplete","handleOnClick","a","obj","target","options","headers","method","body","JSON","stringify","fetch","json","response","direction","IconButton","htmlFor","length","map","breakpoints","up","position","glass","marginTop","img","top","left","zIndex","logo","fontFamily","transform","innerSection","fields","wrapper","authentificationFields","spacer","flexDirection","flex","mainContent","w100","failLogin","invalidField","borderColor","Login","panther","setAuth","username","password","user","setUser","failLoginMessage","setFailLoginMessage","invalidFields","setInvalidFields","handleOnChange","persist","name","handleClickLogin","key","removeInvalid","src","alt","spacing","TextField","type","variant","onSelect","FormControlLabel","control","Checkbox","labelPlacement","Button","controls","email","repassword","phone","site","setRegisterMessage","handleFieldOnChange","handleRegister","registerOptions","loginOptions","loginResponse","onFocus","register","flexWrap","textField","Date","setDate","getDate","toISOString","slice","defaultDate","DatePickers","document","getElementById","noValidate","defaultValue","InputLabelProps","shrink","formControl","minWidth","selectEmpty","SelectLabels","setComplete","FormControl","Select","displayEmpty","inputProps","MenuItem","borderBottom","stamp","titleField","submit","submitWrapper","warning","AddTodo","setTitle","dueDate","setDueDate","titleWarning","setTitleWarning","addTodo","datearr","split","newTodo","Math","floor","random","Typography","lg","appbar","toolbar","menu","Nav","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","Toolbar","aria-label","aria-controls","aria-haspopup","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","Main","auth","path","exact","render","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.04096803.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( () => ( {\r\n    root: {\r\n        alignItems: 'center',\r\n        background: 'white',\r\n        height: '3rem',\r\n        border: '1px solid lightgrey',\r\n        userSelect: 'none',\r\n        cursor: 'pointer',\r\n    },\r\n    titleWrapper: {\r\n        fontWeight: 'bold',\r\n        color: 'black',\r\n        fontSize: '1.2rem',\r\n        paddingRight: '.5rem'\r\n    },\r\n    title: {\r\n        padding: \"0 .5rem\",\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    status: {\r\n        paddingRight: '.5rem',\r\n        '&>div': {\r\n            background: 'gold',\r\n            color: 'green',\r\n            borderRadius: '.5rem',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textTransform: 'lowercase',\r\n            fontWeight: 'bold',\r\n            maxWidth: '200px'\r\n        }\r\n    },\r\n    date: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        paddingRight: '1rem',\r\n\r\n    }\r\n\r\n} ) );\r\n\r\n\r\nexport default function Todo ( props ) {\r\n    const { title, date, id, complete } = props;\r\n    let { completed } = props;\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return (\r\n        <Grid container className={classes.root} onClick={() => { completed = !completed; complete( id ); }} >\r\n            <Grid item xs={5} md={6} className={classes.titleWrapper}>\r\n                <Grid container className={classes.title}>\r\n                    {title}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={4} md={3} className={classes.status}>\r\n                {completed ? <Grid container>completed</Grid> : null}\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.date}>\r\n                <Grid container justify=\"flex-end\">\r\n                    {date}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles( {\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none',\r\n        marginBottom: '1rem'\r\n    },\r\n} );\r\n\r\nexport default function CenteredTabs ( props ) {\r\n    const classes = useStyles();\r\n    const { value, setValue } = props;\r\n\r\n    const handleChange = ( event, newValue ) => {\r\n        setValue( newValue );\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                <Tab label=\"All\" />\r\n                <Tab label=\"Incompleted\" />\r\n                <Tab label=\"Completed\" />\r\n            </Tabs>\r\n        </Paper>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Grid, IconButton, } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Todo from './Todo';\r\nimport Tabs from './Tabs';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    main: {\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        paddingTop: '60px',\r\n    },\r\n    todos: {\r\n        overflowY: 'auto',\r\n        height: '70vh',\r\n        '@media screen and (orientation: landscape)': {\r\n            height: '50vh'\r\n        },\r\n    },\r\n    message: {\r\n        color: 'lightgrey',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: '5rem',\r\n        userSelect: 'none'\r\n    },\r\n    noSelect: {\r\n        userSelect: 'none'\r\n    },\r\n    box: {\r\n        display: 'flex',\r\n        flexFlow: \"column\",\r\n        height: '100%',\r\n    },\r\n} ) );\r\n\r\nexport default function Todos ( props ) {\r\n    const classes = useStyles();\r\n    const { userData, setUserData, setPath } = props;\r\n    const [ todos, setTodos ] = useState( null );\r\n    const [ value, setValue ] = useState( 0 );\r\n    const [ completedTodos, setCompletedTodos ] = useState( null );\r\n    const [ incompletedTodos, setIncompletedTodos ] = useState( null );\r\n\r\n    useEffect( () => {\r\n        console.log( value );\r\n    }, [ value ] );\r\n\r\n    useEffect( () => {\r\n        console.log( completedTodos );\r\n    }, [ completedTodos ] );\r\n\r\n    useEffect( () => {\r\n        console.log( incompletedTodos );\r\n    }, [ incompletedTodos ] );\r\n\r\n    useEffect( () => {\r\n        if ( userData )\r\n        {\r\n            if ( value === 0 )\r\n            {\r\n                setTodos( userData.todos );\r\n            } else if ( value === 1 )\r\n            {\r\n                setTodos( userData.todos.filter( todo => !todo.isComplete ) );\r\n            } else if ( value === 2 )\r\n            {\r\n                setTodos( userData.todos.filter( todo => todo.isComplete ) );\r\n            }\r\n\r\n        }\r\n    }, [ userData, value ] );\r\n\r\n    const handleOnClick = async ( id ) => {\r\n        const obj = { target: id };\r\n        const options = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify( obj )\r\n        };\r\n        const response = await ( await fetch( `./complete/${ userData.id }`, options ) ).json();\r\n        setUserData( { ...response } );\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.main}>\r\n            <Grid item xs={false} md={2} />\r\n            <Grid item xs={12} md={8} className={classes.box}>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <IconButton id=\"add-note\" onClick={() => { setPath( '/add' ); }}>\r\n                            <AddCircleOutlineIcon />\r\n                        </IconButton>\r\n                        <label htmlFor=\"add-todo\" className={classes.noSelect}>Add a new Todo</label>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Tabs value={value} setValue={setValue} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container className={classes.todos}>\r\n                    <Grid item xs={12}>\r\n                        {\r\n                            todos && todos.length ? todos.map( todo => <Todo id={todo.id} complete={handleOnClick} title={todo.title} date={todo.date} completed={todo.isComplete} /> ) : value === 0 ?\r\n                                <Grid item xs={12} className={classes.message}><div>No Todo</div></Grid> : value === 1 ?\r\n                                    <Grid item xs={12} className={classes.message}><div>No Incompleyed Todo</div></Grid> :\r\n                                    <Grid item xs={12} className={classes.message}><div>No Compleyed Todo</div></Grid>\r\n                        }\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={false} md={2} />\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, Checkbox, FormControlLabel, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    main: {\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            minHeight: '100vh'\r\n        },\r\n        minHeight: '600px',\r\n        // background: 'linear-gradient(to right top,#ffbff6,#f58ade)',\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        position: 'relative'\r\n    },\r\n    glass: {\r\n        position: 'relative',\r\n        height: '500px',\r\n        '@media screen and (orientation: landscape)': {\r\n            marginTop: '20px',\r\n        },\r\n        background: 'linear-gradient(to right bottom, rgba(255, 255, 255, 0.4), rgba(255,255,255,0.5))',\r\n        borderRadius: '16px',\r\n        padding: '50px 20px 70px 20px',\r\n        maxWidth: '400px'\r\n    },\r\n    img: {\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '-209px',\r\n        width: '-250px',\r\n        height: '250px',\r\n        zIndex: 3,\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'block'\r\n        },\r\n\r\n    },\r\n    logo: {\r\n        backgroundColor: 'transparent',\r\n        height: '100px',\r\n        width: '100%',\r\n        fontFamily: 'Agreement',\r\n        color: 'white',\r\n        fontSize: '60px',\r\n        fontWeight: '700',\r\n        userSelect: 'none',\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        transform: 'rotate(-10deg)',\r\n        marginBottom: '60px',\r\n    },\r\n    innerSection: {\r\n        height: '300px',\r\n        backgroundColor: 'red',\r\n    },\r\n    fields: {\r\n        justifyContent: 'space-between'\r\n    },\r\n    wrapper: {\r\n        minHeight: '100%',\r\n    },\r\n    authentificationFields: {\r\n\r\n        '&>label': {\r\n            transform: 'translate(14px, 13px) scale(1)',\r\n        },\r\n        '& input': {\r\n            padding: '10px 10px 10px 10px',\r\n        },\r\n    },\r\n    spacer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n    },\r\n    mainContent: {\r\n        width: '100%'\r\n    },\r\n    w100: {\r\n        '&>div': {\r\n            width: '100%',\r\n        }\r\n    },\r\n    failLogin: {\r\n        color: 'red',\r\n    },\r\n    invalidField: {\r\n        '&>label': {\r\n            color: 'red',\r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255, 0, 0, 0.5)',\r\n        }\r\n    }\r\n\r\n} ) );\r\n\r\nexport default function Login ( props ) {\r\n    const { panther, setAuth, setPath } = props;\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const [ user, setUser ] = useState( { username: null, password: null } );\r\n    const [ failLoginMessage, setFailLoginMessage ] = useState( '' );\r\n    const [ invalidFields, setInvalidFields ] = useState( { username: false, password: false } );\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        console.log( user );\r\n    }, [ user ] );\r\n\r\n\r\n    const handleOnChange = ( event ) => {\r\n        event.persist();\r\n        user[ event.target.name ] = event.target.value;\r\n        setUser( { ...user } );\r\n    };\r\n\r\n\r\n    const handleClickLogin = async () => {\r\n        console.log( user );\r\n        if ( user.username && user.password )\r\n        {\r\n            const options = {\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify( user )\r\n            };\r\n            const response = await ( await fetch( '/login-user', options ) ).json();\r\n            if ( response.status === 'success' )\r\n            {\r\n                setFailLoginMessage( '' );\r\n                setAuth( { ...response.userData } );\r\n                setPath( '/todos' );\r\n            }\r\n            else\r\n            {\r\n                setFailLoginMessage( response.message );\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for ( let key in user )\r\n            {\r\n                console.log( !user[ key ] );\r\n                if ( !user[ key ] )\r\n                {\r\n                    console.log( invalidFields[ key ] );\r\n                    invalidFields[ key ] = true;\r\n                }\r\n            }\r\n            setInvalidFields( { ...invalidFields } );\r\n        }\r\n    };\r\n\r\n    const removeInvalid = ( event ) => {\r\n        event.persist();\r\n        invalidFields[ event.target.name ] = false;\r\n        setInvalidFields( { ...invalidFields } );\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid container className={classes.main}>\r\n            <Grid item xs={1} md={4} />\r\n            <Grid item xs={10} md={4}>\r\n                <Grid container className={classes.root}>\r\n\r\n                    <Grid item xs={12} className={classes.glass}>\r\n                        <img className={classes.img} src={panther} alt=\"ceva\" />\r\n                        <Grid container direction=\"column\" alignItems=\"center\" className={classes.wrapper}>\r\n                            <Grid item className={classes.logo}>\r\n                                To do app\r\n                            </Grid>\r\n                            <div className={classes.spacer}></div>\r\n                            <Grid item xs={12} className={classes.mainContent}>\r\n                                <Grid container direction=\"column\" spacing={2} className={classes.fields}>\r\n                                    <Grid item xs={12} className={classes.w100}>\r\n                                        <Grid container justify=\"center\">\r\n                                            <TextField\r\n                                                id=\"login-user\"\r\n                                                label=\"Username\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                className={`${ classes.authentificationFields } ${ invalidFields.username ? classes.invalidField : '' }`}\r\n                                                name=\"username\"\r\n                                                onChange={handleOnChange}\r\n                                                onSelect={removeInvalid}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container justify=\"center\">\r\n                                            <TextField\r\n                                                id=\"login-password\"\r\n                                                label=\"Password\"\r\n                                                type=\"password\"\r\n                                                variant=\"outlined\"\r\n                                                className={`${ classes.authentificationFields } ${ invalidFields.password ? classes.invalidField : '' }`}\r\n                                                name=\"password\"\r\n                                                onChange={handleOnChange}\r\n                                                onSelect={removeInvalid}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container justify=\"flex-start\">\r\n                                            <Grid item xs={3} />\r\n                                            <Grid item xs={9}>\r\n                                                <FormControlLabel\r\n                                                    value=\"end\"\r\n                                                    control={<Checkbox color=\"primary\" />}\r\n                                                    label=\"Remember me\"\r\n                                                    labelPlacement=\"end\"\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container justify=\"center\" className={classes.failLogin}>\r\n                                            {failLoginMessage}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} />\r\n                                            <Grid item xs={4}>\r\n                                                <Grid container justify=\"center\" alignItems=\"center\">\r\n                                                    <Button variant=\"contained\" color=\"primary\" onClick={handleClickLogin}>Login</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} />\r\n                                            <Grid item xs={1} />\r\n                                            <Grid item xs={4}>\r\n                                                <Button color=\"default\" onClick={() => { setPath( '/register' ); }}>Register</Button>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1} md={4} />\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    main: {\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            minHeight: '100vh'\r\n        },\r\n        minHeight: '600px',\r\n        // background: 'linear-gradient(to right top,#ffbff6,#f58ade)',\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        position: 'relative'\r\n    },\r\n    glass: {\r\n        position: 'relative',\r\n        height: '600px',\r\n        '@media screen and (orientation: landscape)': {\r\n            marginTop: '50px',\r\n            height: '535px'\r\n        },\r\n        background: 'linear-gradient(to right bottom, rgba(255, 255, 255, 0.4), rgba(255,255,255,0.5))',\r\n        borderRadius: '16px',\r\n        padding: '20px 20px 20px 20px',\r\n        maxWidth: '600px'\r\n    },\r\n    img: {\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '-209px',\r\n        width: '-250px',\r\n        height: '250px',\r\n        zIndex: 3,\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'block'\r\n        },\r\n\r\n    },\r\n    logo: {\r\n        '@media screen and (orientation: landscape)': {\r\n            marginBottom: '10px'\r\n        },\r\n        backgroundColor: 'transparent',\r\n        height: '100px',\r\n        width: '100%',\r\n        fontFamily: 'Agreement',\r\n        color: 'white',\r\n        fontSize: '60px',\r\n        fontWeight: '700',\r\n        userSelect: 'none',\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        transform: 'rotate(-10deg)',\r\n        marginBottom: '60px',\r\n    },\r\n    innerSection: {\r\n        height: '300px',\r\n        backgroundColor: 'red',\r\n    },\r\n    fields: {\r\n        justifyContent: 'space-between'\r\n    },\r\n    wrapper: {\r\n        minHeight: '100%',\r\n    },\r\n    authentificationFields: {\r\n\r\n        '&>label': {\r\n            transform: 'translate(14px, 13px) scale(1)',\r\n        },\r\n        '& input': {\r\n            padding: '10px 10px 10px 10px',\r\n        },\r\n    },\r\n    spacer: {\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flex: 1,\r\n        }\r\n\r\n    },\r\n    mainContent: {\r\n        width: '100%'\r\n    },\r\n    w100: {\r\n        '&>div': {\r\n            width: '100%',\r\n        }\r\n    },\r\n    controls: {\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n        '&>div': {\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            [ theme.breakpoints.up( 'xs' ) ]: {\r\n                justifyContent: 'center'\r\n            }\r\n        }\r\n    },\r\n    invalidField: {\r\n        '&>label': {\r\n            color: 'red',\r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255, 0, 0, 0.5)',\r\n        }\r\n    }\r\n\r\n} ) );\r\n\r\nexport default function Login ( props ) {\r\n    const { panther, setAuth, setPath } = props;\r\n    const [ user, setUser ] = useState( { username: null, email: null, password: null, repassword: null, phone: null, site: null } );\r\n    const [ invalidFields, setInvalidFields ] = useState( { username: false, email: false, password: false, repassword: false } );\r\n    const [ registerMessage, setRegisterMessage ] = useState( '' );\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleFieldOnChange = ( event ) => {\r\n        event.persist();\r\n\r\n        user[ event.target.name ] = event.target.value;\r\n        setUser( { ...user } );\r\n    };\r\n\r\n    useEffect( () => {\r\n        console.log( user );\r\n    }, [ user ] );\r\n\r\n\r\n    const handleRegister = async () => {\r\n        console.log( user );\r\n        if ( user.username && user.email && user.password && user.repassword )\r\n        {\r\n            const registerOptions = {\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify( user )\r\n            };\r\n            const response = await ( await fetch( '/register-user', registerOptions ) ).json();\r\n            console.log( response );\r\n            if ( response.status === 'success' )\r\n            {\r\n                const loginOptions = {\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                    method: 'POST',\r\n                    body: JSON.stringify( { username: user.username, password: user.password } )\r\n                };\r\n                setRegisterMessage( '' );\r\n                const loginResponse = await ( await fetch( '/login-user', loginOptions ) ).json();\r\n                console.log( loginResponse );\r\n                if ( loginResponse.status === 'success' )\r\n                {\r\n                    setAuth( { ...loginResponse.userData } );\r\n                    setPath( '/todos' );\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setRegisterMessage( response.message );\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for ( let key in user )\r\n            {\r\n                console.log( !user[ key ] );\r\n                if ( !user[ key ] )\r\n                {\r\n                    console.log( invalidFields[ key ] );\r\n                    invalidFields[ key ] = true;\r\n                }\r\n            }\r\n            setInvalidFields( { ...invalidFields } );\r\n        }\r\n    };\r\n\r\n\r\n    const removeInvalid = ( event ) => {\r\n        event.persist();\r\n        invalidFields[ event.target.name ] = false;\r\n        setInvalidFields( { ...invalidFields } );\r\n    };\r\n\r\n    return (\r\n        <Grid container className={classes.main}>\r\n            <Grid item xs={1} md={2} />\r\n            <Grid item xs={10} md={8}>\r\n                <Grid container className={classes.root}>\r\n\r\n                    <Grid item xs={12} className={classes.glass}>\r\n                        <img className={classes.img} src={panther} alt=\"ceva\" />\r\n                        <Grid container direction=\"column\" alignItems=\"center\" className={classes.wrapper}>\r\n                            <Grid item className={classes.logo}>\r\n                                To do app\r\n                            </Grid>\r\n                            <div className={classes.spacer}></div>\r\n                            <Grid item xs={12} className={classes.mainContent}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Grid container className={classes.w100}>\r\n                                            <TextField\r\n                                                label=\"Username*\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                className={`${ classes.authentificationFields } ${ invalidFields.username ? classes.invalidField : '' }`}\r\n                                                name='username'\r\n                                                onFocus={removeInvalid}\r\n                                                onChange={handleFieldOnChange}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Grid container className={classes.w100}>\r\n                                            <TextField\r\n                                                label=\"Email*\"\r\n                                                type=\"mail\"\r\n                                                variant=\"outlined\"\r\n                                                className={`${ classes.authentificationFields } ${ invalidFields.email ? classes.invalidField : '' }`}\r\n                                                name='email'\r\n                                                onFocus={removeInvalid}\r\n                                                onChange={handleFieldOnChange}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Grid container className={classes.w100}>\r\n                                            <TextField\r\n                                                label=\"Password*\"\r\n                                                type=\"password\"\r\n                                                variant=\"outlined\"\r\n                                                className={`${ classes.authentificationFields } ${ invalidFields.password ? classes.invalidField : '' }`}\r\n                                                name=\"password\"\r\n                                                onFocus={removeInvalid}\r\n                                                onChange={handleFieldOnChange}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Grid container className={classes.w100}>\r\n                                            <TextField\r\n                                                label=\"Re-Password*\"\r\n                                                type=\"password\"\r\n                                                variant=\"outlined\"\r\n                                                className={`${ classes.authentificationFields } ${ invalidFields.repassword ? classes.invalidField : '' }`}\r\n                                                name=\"repassword\"\r\n                                                onFocus={removeInvalid}\r\n                                                onChange={handleFieldOnChange}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Grid container className={classes.w100}>\r\n                                            <TextField\r\n                                                label=\"Website\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.authentificationFields}\r\n                                                name=\"site\"\r\n                                                onChange={handleFieldOnChange}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Grid container className={classes.w100}>\r\n                                            <TextField\r\n                                                label=\"Phone\"\r\n                                                type=\"phone\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.authentificationFields}\r\n                                                name=\"phone\"\r\n                                                onChange={handleFieldOnChange}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container className={classes.controls}>\r\n                                            <Grid item xs={false} md={1} />\r\n                                            <Grid item xs={2} md={5}>\r\n                                                <Grid container alignItems=\"center\">\r\n                                                    <Button color=\"default\" onClick={() => { setPath( '/login' ); }}>Back</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={2} md={1} />\r\n                                            <Grid item xs={8} md={5}>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    className={classes.register}\r\n                                                    onClick={handleRegister}\r\n                                                >Create Account</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1} md={2} />\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: theme.spacing( 2 ),\r\n    },\r\n    textField: {\r\n        width: 200,\r\n    },\r\n} ) );\r\n\r\nconst date = new Date();\r\ndate.setDate( date.getDate() );\r\nconsole.log( `${ date.toISOString().slice( 0, 4 ) }-${ date.toISOString().slice( 5, 7 ) }-${ date.toISOString().slice( 8, 10 ) }` );\r\n\r\n\r\nconst defaultDate = `${ date.toISOString().slice( 0, 4 ) }-${ date.toISOString().slice( 5, 7 ) }-${ date.toISOString().slice( 8, 10 ) }`;\r\n\r\nexport default function DatePickers ( props ) {\r\n    const classes = useStyles();\r\n    const { setDate } = props;\r\n\r\n    const handleOnChange = ( event ) => {\r\n        setDate( event.target.value );\r\n    };\r\n\r\n    useEffect( () => {\r\n        setDate( document.getElementById( 'date' ).value );\r\n    }, [] );\r\n\r\n    return (\r\n        <Grid className={classes.container} noValidate>\r\n            <TextField\r\n                id=\"date\"\r\n                label=\"Due to\"\r\n                type=\"date\"\r\n                defaultValue={defaultDate}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={handleOnChange}\r\n            />\r\n        </Grid>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing( 2 ),\r\n    },\r\n} ) );\r\n\r\nexport default function SelectLabels ( props ) {\r\n    const classes = useStyles();\r\n    const { setComplete } = props;\r\n    const [ value, setValue ] = useState( 'incomplete' );\r\n\r\n\r\n    const handleChange = ( event ) => {\r\n        setComplete( event.target.value === \"complete\" );\r\n        setValue( event.target.value );\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Select\r\n                value={value}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n                <MenuItem value={\"complete\"}>Complete</MenuItem>\r\n                <MenuItem value={\"incomplete\"}>Incomplete</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography, TextField, Button, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DatePicker from './DatePicker';\r\nimport StatusSelect from './StatusSelect';\r\nimport { Link } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    main: {\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        paddingTop: '100px',\r\n        overflowY: 'auto'\r\n    },\r\n    titleWrapper: {\r\n        color: 'black',\r\n        padding: '1rem 0',\r\n    },\r\n    title: {\r\n        padding: '0 2rem',\r\n        fontSize: '2rem',\r\n        borderBottom: '1px solid #000',\r\n        width: 'fit-content',\r\n    },\r\n    stamp: {\r\n        height: 'fit-content',\r\n    },\r\n    titleField: {\r\n        [ theme.breakpoints.up( 'sm' ) ]: {\r\n            width: 300\r\n        }\r\n    },\r\n    submit: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            justifyContent: 'flex-start',\r\n        }\r\n    },\r\n    submitWrapper: {\r\n        paddingTop: '1rem',\r\n    },\r\n    warning: {\r\n        '&>label': {\r\n            color: 'red',\r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255, 0, 0, 0.5)',\r\n        }\r\n    }\r\n} ) );\r\n\r\nexport default function AddTodo ( props ) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { userData, setUserData, setPath } = props;\r\n\r\n    const [ complete, setComplete ] = useState( false );\r\n    const [ title, setTitle ] = useState( null );\r\n    const [ dueDate, setDueDate ] = useState( null );\r\n    const [ titleWarning, setTitleWarning ] = useState( false );\r\n\r\n    const addTodo = async () => {\r\n        if ( !title )\r\n        {\r\n            setTitleWarning( true );\r\n            return;\r\n        }\r\n        const datearr = dueDate.split( '-' );\r\n        const date = `${ datearr[ 2 ] }/${ datearr[ 1 ] }/${ datearr[ 0 ] }`;\r\n        console.log( date );\r\n        const newTodo = {\r\n            id: `${ title }${ dueDate }${ Math.floor( Math.random() * 10000 ) }`,\r\n            title: title,\r\n            isComplete: complete,\r\n            date: date\r\n        };\r\n        console.log( newTodo );\r\n        const options = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify( { todo: newTodo } )\r\n        };\r\n\r\n        const response = await ( await fetch( `./add-note/${ userData.id }`, options ) ).json();\r\n        console.log( response );\r\n        setUserData( { ...response.userData } );\r\n        setPath( '/todos' );\r\n    };\r\n\r\n\r\n    const handleOnChange = ( event ) => {\r\n        setTitleWarning( false );\r\n        setTitle( event.target.value );\r\n    };\r\n\r\n    useEffect( () => {\r\n        console.log( title );\r\n    }, [ title ] );\r\n\r\n    useEffect( () => {\r\n        console.log( complete );\r\n    }, [ complete ] );\r\n\r\n\r\n    useEffect( () => {\r\n        console.log( dueDate );\r\n    }, [ dueDate ] );\r\n\r\n\r\n    return (\r\n        <Grid container className={classes.main}>\r\n            <Grid item xs={1} className={classes.stamp} />\r\n            <Grid item xs={10}>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <IconButton onClick={() => { setPath( '/todos' ); }}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={`${ classes.titleWrapper } ${ classes.stamp }`}>\r\n                        <Typography className={classes.title}>\r\n                            Add a new Todo\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={1} md={false} />\r\n                            <Grid item xs={11} md={12}>\r\n                                <TextField className={`${ classes.titleField } ${ titleWarning ? classes.warning : null }`} id=\"outlined-basic\" label=\"Todo\" onChange={handleOnChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={1} md={false} />\r\n                            <Grid item xs={11} md={12}>\r\n                                <DatePicker setDate={setDueDate} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3} lg={2}>\r\n                        <Grid container>\r\n                            <Grid item xs={2} md={false} />\r\n                            <Grid item xs={10} md={12}>\r\n                                <StatusSelect setComplete={setComplete} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={9} lg={10} className={`${ classes.submit } ${ classes.submitWrapper }`}>\r\n                        <Grid container className={classes.submit}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={addTodo}>Add Todo</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AppBar, Toolbar, IconButton, Menu, Typography, MenuItem } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( () => ( {\r\n    appbar: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none',\r\n        position: 'fixed'\r\n    },\r\n    toolbar: {\r\n    },\r\n    logo: {\r\n        fontFamily: 'Agreement',\r\n        color: 'white',\r\n        fontSize: '45px',\r\n        fontWeight: '700',\r\n        userSelect: 'none',\r\n        transform: 'rotate(-10deg)',\r\n    },\r\n    spacer: {\r\n        display: 'flex',\r\n        flex: 1,\r\n    },\r\n    menu: {\r\n        transform: 'translate(0, 40px)',\r\n    },\r\n} ) );\r\n\r\nexport default function Nav ( props ) {\r\n    const { setAuth } = props;\r\n    const classes = useStyles();\r\n\r\n    const [ anchorEl, setAnchorEl ] = useState( null );\r\n    const open = Boolean( anchorEl );\r\n\r\n    const handleMenu = ( event ) => {\r\n        if ( anchorEl )\r\n        {\r\n            return handleClose();\r\n        }\r\n        setAnchorEl( event.currentTarget );\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl( null );\r\n    };\r\n\r\n    const signOutHandler = () => {\r\n        handleClose();\r\n        setAuth( null );\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\" className={classes.appbar}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography className={classes.logo}>\r\n                    To do app\r\n                </Typography>\r\n                <div className={classes.spacer}></div>\r\n                <IconButton\r\n                    id=\"account\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMenu}\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    className={classes.menu}\r\n                >\r\n                    <MenuItem onClick={signOutHandler}>Sign out</MenuItem>\r\n                </Menu>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pink-panther.fcadb150.png\";","import React, { useState, useEffect } from 'react';\r\nimport Todos from './Home';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport AddTodo from './Add';\r\nimport Nav from './Nav';\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport panther from '../res/pink-panther.png';\r\n\r\n\r\nexport default function Main () {\r\n    const [ auth, setAuth ] = useState( null );\r\n    const [ path, setPath ] = useState( '/login' );\r\n\r\n    useEffect( () => {\r\n        if ( auth )\r\n        {\r\n            setPath( '/todos' );\r\n        }\r\n        return () => {\r\n            setPath( '/login' );\r\n        };\r\n    }, [ auth ] );\r\n\r\n    return (\r\n        <Router>\r\n\r\n            {auth ? <Nav setAuth={setAuth} /> : null}\r\n            <Switch>\r\n                <Route path=\"/todos\" exact render={() => <Todos setUserData={setAuth} userData={auth} setPath={setPath} />} />\r\n                <Route path=\"/add\" render={() => <AddTodo setUserData={setAuth} userData={auth} setPath={setPath} />} />\r\n                <Route path=\"/login\" render={() => <Login panther={panther} setAuth={setAuth} setPath={setPath} />} />\r\n                <Route path=\"/register\" render={() => <Register panther={panther} setAuth={setAuth} setPath={setPath} />} />\r\n            </Switch>\r\n            <Redirect to={path} />\r\n        </Router>\r\n    );\r\n}\r\n","import './App.css';\r\nimport Main from './components/Main';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n\r\n} ) );\r\n\r\nfunction App () {\r\n  const classes = useStyles();\r\n  return (\r\n    <main className={classes.main}>\r\n      <Main />\r\n    </main>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}